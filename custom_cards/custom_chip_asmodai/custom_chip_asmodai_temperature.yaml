---
##
## Temperature chip.
##
## This is near-identical to Minimalist's `chip_temperature`.  The only
## substantial difference is that the chip's label now includes the SI unit
## symbol for degrees celsius :)
##
chip_asmodai_temperature:
  template:
    - "chips"
    - "ulm_actions_card"
  variables:
    ulm_card_weather_enable_popup: false
    ulm_chip_temperature_humidity: "[[[ return variables.ulm_chip_temperature_humidity ]]]"
  triggers_update: "all"
  label: |
    [[[
      var state = states[variables.ulm_chip_temperature_weather].state;
      var icon  = {
        "clear-night":     "🌙",
        "cloudy":          "☁️",
        "exceptional":     "🌞",
        "fog":             "🌫️",
        "hail":            "⛈️",
        "lightning":       "⚡",
        "lightning-rainy": "⛈️",
        "partlycloudy":    "⛅",
        "pouring":         "🌧️",
        "rainy":           "💧",
        "snowy":           "❄️",
        "snowy-rainy":     "🌨️",
        "sunny":           "☀️",
        "windy":           "🌪️",
        "default":         "🌡️"
      }
      var humicon = "💧"
      
      function convertFloat(temp) {
        if (parseFloat(temp) == temp && Math.floor(temp) != temp) {
            return parseFloat(temp).toFixed(1);
        }
        
        return temp;
      }
      
      var outside_temp = states[variables.ulm_chip_temperature_outside].state;
      var label = (icon[state] || icon["default"]) + "&nbsp;&nbsp;" + convertFloat(outside_temp) + "°C";
      var inside_temp  = null;
      var humidity     = null;
      
      if (variables.ulm_chip_temperature_inside) {
        inside_temp = states[variables.ulm_chip_temperature_inside].state;
      }
      
      if (variables.ulm_chip_temperature_humidity) {
        humidity = states[variables.ulm_chip_temperature_humidity].state;
      }
      
      if (inside_temp) {
        label += " │ " + convertFloat(inside_temp) + "°C";
      }
      
      if (humidity) {
        label += " │ " + humicon + "&nbsp;&nbsp;" + convertFloat(humidity) + "%";
      }
      
      return label;
    ]]]

# EOF
