---
card_asmodai_tablet_button:
  show_icon:       true
  show_name:       true
  show_label:      false
  triggers_update: "all"
  variables:
    icon:          "[[[ return variables.icon; ]]]"
    name:          "[[[ return variables.name; ]]]"
    path:          "[[[ return variables.path; ]]]"
    hide_disabled: false
    entities:
      light:      null
      presence:   null
      heating:    null
      window:     null
      door:       null
      multimedia: null
    colors:
      default:  "#eae1fe"
      inactive: "#54b4ff"
      active:   "#3ffe5e"
      disabled: "#8b839d"
    icons:
      light:
        active:   mdi:lightbulb
        inactive: mdi:lightbulb
        disabled: mdi:lightbulb-off
      presence:
        active:   mdi:account
        inactive: mdi:account
        disabled: mdi:account-off
      heating:
        active:   mdi:radiator
        inactive: mdi:radiator-disabled
        disabled: mdi:radiator-off
      window:
        active:   mdi:window-open-variant
        inactive: mdi:window-closed-variant
        disabled: mdi:window-closed-variant
      door:
        active:   mdi:door-open
        inactive: mdi:door-closed
        disabled: mdi:door-closed
      multimedia:
        active:   mdi:television-play
        stopped:  mdi:television-stop
        pause:    mdi:television-pause
        inactive: mdi:television
        disabled: mdi:television-off
  type:   custom:button-card
  icon:   "[[[ return variables.icon; ]]]"
  name:   "[[[ return variables.name; ]]]"
  entity: "[[[ return variables.entities.light ]]]"
  styles:
    card:
      - "--keep-background": true
      - background-color: rgba(66, 46, 94, 0.8);
      - box-shadow: 4px 4px 5px 1px rgba(0,0,0,0.3);
      - padding: 0px;
    grid:
      - grid-template-areas:   "'b1 b2 b3 b4 b5 b6' 'i i i i i i' 'n n n n n n'"
      - grid-template-columns: "auto auto auto auto auto"
      - grid-template-rows:    "auto"
    name:
      - filter: "drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4))"
    icon:
      - color: >- 
          [[[
            if (!entity || entity.state == "off") {
              return variables.colors.default;
            }

            return 'rgba(' + entity.attributes.rgb_color + ',0.8)';
          ]]]
      - filter: "drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4))"
  tap_action:
    action: navigate
    navigation_path: "[[[ return variables.path; ]]]"
  custom_fields:
    b1:   # Light
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.light ]]]"     
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.light.active; ]]]"
            inactive: "[[[ return variables.icons.light.inactive; ]]]"
            disabled: "[[[ return variables.icons.light.disabled; ]]]"
    b2:   # Presence
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.presence; ]]]"
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.presence.active; ]]]"
            inactive: "[[[ return variables.icons.presence.inactive; ]]]"
            disabled: "[[[ return variables.icons.presence.disabled; ]]]"
    b3:   # Heating
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.heating; ]]]"
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.heating.active; ]]]"
            inactive: "[[[ return variables.icons.heating.inactive; ]]]"
            disabled: "[[[ return variables.icons.heating.disabled; ]]]"
    b4:   # Multimedia
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.multimedia; ]]]"
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.multimedia.active; ]]]"
            inactive: "[[[ return variables.icons.multimedia.inactive; ]]]"
            disabled: "[[[ return variables.icons.multimedia.disabled; ]]]"
    b5:   # Window(s)
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.window; ]]]"
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.window.active; ]]]"
            inactive: "[[[ return variables.icons.window.inactive; ]]]"
            disabled: "[[[ return variables.icons.window.disabled; ]]]"
    b6:   # Door
      card:
        type: custom:button-card
        template: card_asmodai_tablet_button__badge
        variables:
          path:     "[[[ return variables.path; ]]]"
          hide:     "[[[ return variables.hide_disabled; ]]]"
          entities: "[[[ return variables.entities.door; ]]]"
          colors:
            default:  "[[[ return variables.colors.default; ]]]"
            inactive: "[[[ return variables.colors.inactive; ]]]"
            active:   "[[[ return variables.colors.active; ]]]"
            disabled: "[[[ return variables.colors.disabled; ]]]"
          icons:
            active:   "[[[ return variables.icons.door.active; ]]]"
            inactive: "[[[ return variables.icons.door.inactive; ]]]"
            disabled: "[[[ return variables.icons.door.disabled; ]]]"

#
# Badge
#
card_asmodai_tablet_button__badge:
  show_name:       false
  show_label:      false
  triggers_update: "all"
  show_icon:       true
  variables:
    path:     "[[[ return variables.path; ]]]"
    hide:     false
    entities: null
    colors:
      default:  "[[[ return variables.colors.default; ]]]"
      inactive: "[[[ return variables.colors.inactive; ]]]"
      active:   "[[[ return variables.colors.active; ]]]"
      disabled: "[[[ return variables.colors.disabled; ]]]"
    icons:
      active:   "[[[ return variables.icons.active; ]]]"
      inactive: "[[[ return variables.icons.inactive; ]]]"
      disabled: "[[[ return variables.icons.disabled; ]]]"
  icon: >-
    [[[
      if (!variables.entities) {
        return variables.icons.disabled;
      }

      var ents = variables.entities;
      if (!Array.isArray(variables.entities)) {
        ents = [ variables.entities ];
      }

      for (var elt in ents) {
        if (states[ents[elt]].state == 'on') {
          return variables.icons.active;
        }
      }

      return variables.icons.inactive;
    ]]]
  styles:
    card:
      - "--mdc-ripple-press-opacity": 0
      - background-color: rgba(0,0,0,0.0)
    icon:
      - filter: "drop-shadow(3px 5px 2px rgb(0 0 0 / 0.4))"
      - color: >-
          [[[
            if (!variables.entities) {
              if (variables.hide) {
                return "transparent !important";
              }
              
              return variables.colors.disabled;
            }

            var ents = variables.entities;
            if (!Array.isArray(variables.entities)) {
              ents = [ variables.entities ];
            }

            for (var elt in ents) {
              if (states[ents[elt]].state != 'off') {
                return variables.colors.active;
              }
            }

            return variables.colors.inactive;
          ]]]
  tap_action:
    action: none

